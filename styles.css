/* Any element with the class "date" that is right after an h2 element will be centered and colored. */
h2 + .date {
    text-align: center;
    color: hsl(9, 79%, 46%);
}

/* Any element with the class "author" will be colored blue. */
.author {
    color: blue;
}

/* Wildcard so everything on the the page should be set to Ubuntu text. */
* {
    font-family: 'Ubuntu', sans-serif;
}

/* Any label with the attribute of "for" within it. Color the background yellow. */
label[for] {
    background-color: yellow;
}

/* Any element with id of "most-recent-post will be selected. */
#most-recent-post {
    border-width: 0.05in;
    border-style: solid;
    border-color: green;
    padding-top: 2pt;
}

/* Any audio element will be sized as denoted below. */
audio {
    display:inline-block;
    max-height: 20px;
    max-width: 280px;
}

/* Center the text for each of the posts titles. Including the first post that was put within a div.*/
section h2, div h2 {
    text-align: center;
    text-decoration: underline;
}

.block, section {
    /* The size of the border width wise. */
    border-width: 2px;
    /* What style of border, in this case a solid line. */
    border-style: solid;
    /* What color the border is */
    border-color: black;
    /* Adds curve to edges of the border's box. */
    border-radius: 10pt;
    padding: .5vh, ;
} 

/* General Sibling Selector, selects the siblings of ul that are h4 elements. */
ul ~ h4 {
    font-family: 'Josefin Sans', sans-serif;
    margin-left: 5px;
}

/* When hovering over an a element (a link) it will change the color to blue. */
a:hover {
    color: blue;
}

/* After you've clicked on the link text changes to yellow. */
a:active {
    color: yellow;
  }

/* Child Selector, selects all img elements that are children of div. */
div > img {
    border: 1.5px solid black;
    height: 500px;
    width: 500px;
}

.block {
    display: block;
}

/* Div elements that have img-grid class, create a grid. */
div.img-grid {
    display: grid;
    /* 2 columns  */
    grid-template-columns: repeat(2, 1fr);
    /* Add a gap between the columns of the grid. */
    grid-column-gap: 12px;
    /* Add a gap between everything else as well. */
    grid-gap: 10px;
    /* Add padding within the grid. */
    padding: 10px;
    /* Auto create rows every 500px, should end up with 3 rows with our 6 photos. */
    grid-auto-rows: 500px;
}

/* Select the img elements within the element labeled as img-grid class. */
.img-grid img {
    /* Since the grid pieces are already sized appropriately we can have our images fill those grid slots. */
    width: 100%;
    height: 100%;
    margin: 2px;
    /* Add a border surrounding each image. */
    border: 2px solid #333;
}

/* Create a flexbox for use within the form. */
.flexbox {
    /* Set the display as flex. */
    display: flex;
    /* Column as the direction makes the flex boxes be vertical rather then horizontal. */
    flex-direction: column;
    /* Have the elements wrap if needed. */
    flex-wrap: wrap;
    /* Center the items within the flex box. */
    align-items: center;
}

/* Select the fieldset which is the inner boxes of my form. */
fieldset {
    /* Set a universal size for cleanliness. */
    width: 500px;
    /* Add a margin above and below each element. */
    margin-top: 5px; 
    margin-bottom: 5px;
}

/* Center direct children within each fieldset (Legend) to be auto centered using margin. */
fieldset * {
    margin: auto;
}

/* If the size gets to within 600px then the small screen text at bottom of screen turns green. */
@media screen and (max-width: 600px) {
    #small-screen {
        color: green;
    }
}

/* Select the video and center it horizontally on screen. Give it a little padding below as well. */
video {
    display: block;
    margin: auto;
    padding-bottom: 5px;
}